----- This Localization is tested on a windows machine-----
**** Video tutorial: https://youtu.be/0JQ4fA-VRBM ****
1. Requirements 
	-Flutter 3.3.8 (or newer) https://docs.flutter.dev/get-started/install
	-Python 3.9.6 (specific version recomended to work well with specific python packages such as TensorFlow and Keras ) https://www.python.org/downloads/ released June 28, 2021
	-MariaDB ( Version 10.10.2 used)  https://mariadb.org/download/?t=mariadb&p=mariadb&r=10.10.2&os=windows&cpu=x86_64&pkg=msi&m=gigenet

*** the rest of this document assumes you have set up the required dev tools above including downloading required dependent technologies for flutter and set up system paths to respective bin files ***
2. Create virtual environment in python to run the app.py file (a method also described here: https://packaging.python.org/en/latest/guides/installing-using-pip-and-virtual-environments/)
	-1. on command line/terminal line, change the directory into the backend directory (something like ./code/backend)
	-2.enter in command line: 
	-2. enter in the command line: py -m venv env 
	-3. enter into the virtual environment by entering: .\env\Scripts\activate
*** The next step is done while in the virtual environment ***
3. Downloading Python Requirements onto virtual system environment 
	-1. while in the back end virtual environment as in the previous step 
	-2. enter in the command line:  pip install -r requirements.txt
	-3. all dependencies should be downloaded onto your system
4. set up MariaDB database:
	- 1. inside the terminal of your choice log into your MariaDB server by entering : mysql -u root -p
	- 2. inside your database server enter:  CREATE DATABASE IF NOT EXISTS crab;
	- 3. exit your database server by entering ctrl+c
	
5. set up config.json file inside the backend folder template :
{
    "mysql":{
        "host":"localhost",
        "user":"root",
        "port": {port that mariadb server running on} ,
        "passwd": "{password for database server}",
        "db":"crab"
    }
}

6. Download and add model.h5 from google drive into the backend folder

7. Running the application
	-1. in the terminal for the back-end in the virtual environment, start the back end server by entering the command line: flask run
        -2. open another terminal going to the front end of the application 
        -3.start the front-end application by entering in the command line: flutter run




	
 
